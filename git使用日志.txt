
//    git 学习日志

***在 windows 上安装 git
-下载地址： http://msysgit.github.io/
-自报家门： $ git config --global user.name "your name"
           $ git config --global user.name "email@example.com"

***创建版本库 repository
-创建命令： $ mkdir learngit
           $ cd learngit
           $ pwd
           // pwd 命令用于显示当前目录
-通过 git init 命令把这个目录变成 Git 可以管理的仓库
    $ git init

***把文件添加到版本库
-编写一个 readme.txt 文件，放在 learngit 的目录下
-用命令 git add 告诉 Git，把文件添加到仓库
    $ git add readme.txt
    // add 可以多次使用，添加多个文件
-用命令 git commit 告诉 Git，把文件提交到仓库
    $ git commit -m "wrote a readme file"
    // commit 一次可以提交多个文件

***版本回退
-git status 命令可以让我们时刻掌握仓库当前的状态
    如果 git status 告诉你有文件被修改过，用 git diff 可以查看修改的内容
-git log 用于显示从最近到最远的提交日志
    使用 git log --pretty=oneline 可以简化信息的输出
-git reset --hard HEAD^ 命令用于回退到上个版本
    HEAD 表示当前版本，也就是最新提交的版本，上个版本就是 HEAD^
    上上个版本就是 HEAD^^，往上一百个版本写成 HEAD~100
-cat readme.txt 用于查看文件的内容
-可以用 git reset --hard commit_id 命令指定回到未来的某个版本
    在命令行的窗口还未关闭时，可以通过具体的 id 回到指定的版本
    版本号只用写前几位，git 会自动去查找
-git reflog 用于查看命令历史，以便确定回到未来的哪个版本

***工作区和缓存区
-工作区就是你在电脑里能看到的目录，比如 learngit 文件夹就是一个工作区
-工作区有个 .git 目录，是 Git 的版本库，里面有 stage 的暂存区，还有 Git 为我们自动
    创建的第一个分支 master ，以及指向 master 的一个指针 header
-往 Git 里面添加文件时，
    第一步，执行 git add 把文件添加进去，实际上就是把文件修改添加到暂存区
    第二步，执行 git commit 提交更改，实际上把暂存区的所有内容提交到当前的分支
-每次修改，如果不 add 到暂存区，那就不会加入到 commit 中

***撤销修改与删除文件
-撤销修改
    可以用 git checkout -- file ，可以丢弃工作区的修改
        一种是 file 自修改后还没有被放到暂存区，撤销修改就回到和版本库一模一样的状态
        一种是 file 已经添加到暂存区后，又做了修改，撤销修改就回到添加到暂存区后的状态
    总之，就是让 file 回到最近一次 git commit 或 git add 时的状态
-删除文件
    已提交的文件，用 rm file 命令移除
        并用 git rm file 删掉，并且用 git commit 提交修改
        删错了，用 git checkout 恢复到最新的版本
    用 git rm 会丢失最近一次提交后你修改的内容
